// This file was auto-generated by ML.NET Model Builder. 
using IdentificarCodigoDeBarras.Models;
using IdentificarCodigoDeBarras.Service;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Http.Features;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.ML;
using Microsoft.OpenApi.Models;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

// Configure app
var builder = WebApplication.CreateBuilder(args);

builder.Services.AddPredictionEnginePool<Identificar_codigo_barras.ModelInput, Identificar_codigo_barras.ModelOutput>()
    .FromFile("identificar-codigo-barras.zip");

builder.Services.AddControllers();

builder.Services.AddEndpointsApiExplorer();
builder.Services.AddScoped<AnaliseImageService, AnaliseImageService>();

builder.Services.Configure<FormOptions>(o =>
{
    o.ValueLengthLimit = int.MaxValue;
    o.MultipartBodyLengthLimit = int.MaxValue;
    o.MemoryBufferThreshold = int.MaxValue;
});


builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new OpenApiInfo { Title = "My API", Description = "Docs for my API", Version = "v1" });
});
var app = builder.Build();

app.UseSwagger();

app.UseSwaggerUI(c =>
{
    c.SwaggerEndpoint("/swagger/v1/swagger.json", "My API V1");
});

// Define prediction route & handler
//app.MapPost("/predict",
//async (PredictionEnginePool<Identificar_codigo_barras.ModelInput, Identificar_codigo_barras.ModelOutput> predictionEnginePool, Identificar_codigo_barras.ModelInput input) =>
//await Task.FromResult(predictionEnginePool.Predict(input)));

//app.MapPost("/verifica",
//    async (AnaliseImageService analiseImg, ImagemRequest imagemRequest) => 
//    {
//        return await Task.FromResult(analiseImg.VerificaCodigoDeBarras(imagemRequest));
//    });

app.UseRouting();

app.UseEndpoints(endpoints =>
{
    endpoints.MapControllers();
});

//app.MapPost("/verifica",
//    async ([FromServices]AnaliseImageService analiseImg, [FromForm]IFormFile arquivo) =>
//    {
//        return await analiseImg.VerificaCodigoDeBarras(arquivo);
//    });


// Run app
app.Run();

